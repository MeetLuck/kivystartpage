#dong,sedae,floor,post,ev
dong_sedae_floor_post_ev = [
# 동    세대  층 EV1   EV-2   초소 1F(공) B1a(공) B1b(공), B2a(공) B2b(공)  B1c(공) B1d(공) B2c(공) B2d(공)
[101,       3,  29 , 2, '101-2',  1,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[102,       3,  29 , 2,      '',  2,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[103,       3,  27 , 2, '103-2',  1,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[104,       3,  29 , 2, '104-2',  2,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[105,       3,  29 , 2,      '',  3,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[106,       3,  27 , 2, '106-2',  3,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[107,       2,  26 , 1,      '',  1,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[108,       2,  29 , 1,      '',  3,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[109,       4,  29 , 2, '109-2',  3,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[110,       2,  26 , 1,      '',  3,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[111,       3,  28 , 2,      '',  2,  9001,  9002,  9003,   '',     '',     '',   9201, '',  '',    ''],
['111-22',  2,  28 , 2,      '',  2,  9001,  9002,  9003,   '',     '',     '',   9201, '',  '',    ''],
[112,       3,  28 , 2,      '',  2,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
['112-22',  2,  28 , 2,      '',  2,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[113,       2,  27 , 2,      '',  2,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[114,       2,  27 , 2,      '',  2,  9001,  9002,  9003,   '',     '',     '',   9201, '',  '',    ''],
[115,       2,  28 , 2,      '',  5,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[116,       2,  28 , 2,      '',  6,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[117,       2,  28 , 2,      '',  6,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[118,       3,  29 , 2,      '',  6,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[119,       3,  29 , 2,      '',  6,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[120,       3,  29 , 2,      '',  5,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[121,       3,  29 , 2,      '',  5,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[122,       3,  29 , 2,      '',  7,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[123,       3,  29 , 2, '123-2',  6,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',  '',    ''],
[124,       3,  29 , 2, '124-2',  6,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[125,       3,  28 , 2, '125-2',  6,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[126,       2,  27 , 2,      '',  7,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[127,       3,  27 , 2,      '',  8,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
['127-21',  2,  27 , 2,      '',  8,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[128,       3,  27 , 2,      '',  8,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
['128-21',    2,  27 , 2,      '',  8,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[129,       3,  27 , 2,      '',  8,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
['129-21',    2,  27 , 2,      '',  8,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[130,       3,  28 , 2, '130-2',  7,  9001,  9002,  9003,   '',     '',     '',   '',   '',  '',    ''],
[131,       4,  26 , 1,      '',  7,  9001,  9002,  9003,   9004,   9005,   9006, 9007, 9008,'',    ''],
[132,       4,  26 , 1,      '',  7,  9001,  9002,  9003,   9004,   9005,   9006, 9007, 9008,'',    ''],
[133,       4,  27 , 1,      '',  8,  9001,  9002,  9003,   9004,   9005,   9006, 9007, 9008, 9009, 9010],
[134,       4,  28 , 1,      '',  9,  9001,  9002,  9003,   9004,   9005,   9006, 9007, 9008, 9009, 9010],
[135,       4,  27 , 1,      '',  9,  9001,  9002,  9003,   9004,   9005,   9006, 9007, '',   '',   ''],
[136,       2,  28 , 1,      '', 10,  9001,  9002,  9003,   '',     '',     '',   9201, '',   '',   ''],
[137,       2,  28 , 1,      '', 10,  9001,  9002,  9003,   '',     '',     '',   '',   '',   '',   ''],
[138,       4,  28 , 2, '138-2', 10,  9001,  9002,  9003,   '',     '',     '',   '',   '',   '',   ''],
[139,       2,  26 , 1,      '', 10,  9001,  9002,  9003,   '',     '',     '',   '',   '',   '',   ''],
[140,       4,  28 , 2, '140-2',  9,  9001,  9002,  9003,   9004,   9005,   9006, 9007, '',   '',   ''],
[141,       2,  28 , 1,      '',  9,  9001,  9002,  9003,   9004,   9005,   '',   '',   '',   '',   ''],
[142,       2,  23 , 1,      '',  9,  9001,  9002,  9003,   '',     '',     '',   '',   '',   '',   ''],
[143,       4,  26 , 2, '143-2',  9,  9001,  9002,  9003,   '',     '',     '',   '',   '',   '',   ''],
[144,       2,  26 , 1,      '',  9,  9001,  9002,  9003,   '',     '',     '',   '',   '',   '',   ''] ]

posts = [1,2,3,5,6,7,8,9,10]
# 111   :  22~28
# 112   :  22~28
# 127   :  21~ 27

def find_dong(dong):
    for index,dong_record in enumerate(dong_sedae_floor_post_ev):
        if dong in map(str,dong_record):
            return index

    #raise Exception('invalid dong')

def find_post(dong):
    for dong_record in dong_sedae_floor_post_ev:
        if dong == str(dong_record[0]) :
            return str( dong_record[5] )
    return ''

def find_ev1(dong) -> int:
    for dong_record in dong_sedae_floor_post_ev:
        if dong in map(str,dong_record):
            if dong_record[3] == 1:
                return dong_record[3]
    return ''

def find_must_ev2(dong):
    for dong_record in dong_sedae_floor_post_ev:
        if dong in map(str,dong_record):
            return str( dong_record[4] ) 
    return ''
find_use_ev2 = find_must_ev2

def get_dongsforpost(post:int)->list:
    dongs = list()
    for dong_record in dong_sedae_floor_post_ev:
        if dong_record[5] == post:
            dongs.append(dong_record[0])
    return dongs[:]

def find_ev1_old(dong):
    only_evs = map(str,[107,108,110,131,132,133,134,135,136,137,139,141,142,144])
    return 1 if dong in only_evs else ''

def find_must_ev2_old(dong):
    only_ev2 = map(str,[101,103,104,106,109,123,124,125,130,138,140,143])
    return 1 if dong in only_ev2 else ''

if __name__ == '__main__':
    #print( find_dong(115) )
    #print( find_dong(144) )
    dong = '101'
    dong_index = find_dong(dong)
    sedae = dong_sedae_floor_post_ev[dong_index][1]
    floor = dong_sedae_floor_post_ev[dong_index][2]
    print(dong,sedae,floor)

